import argparse
import random
import time
from copy import copy

import oss2
import requests
from prettytable import PrettyTable

from plugins.AliCloud import PluginAliCloudBase, AliCloud
from utils import output
from utils.consts import AllPluginTypes


class PluginAliCloudListBuckets(PluginAliCloudBase):
    display = "列出存储桶"
    alias = "ali_get_bucket"
    p_type = AllPluginTypes.Exploit

    def __init__(self):
        super().__init__()

    def reg_argument(self, parser: argparse.ArgumentParser):
        parser.description = self.display
        parser.add_argument("-a", "--access-key", required=True, help="access key", dest="access_key")
        parser.add_argument("-s", "--secret-key", required=True, help="secret key", dest="secret_key")

    def run_script(self, args) -> dict:
        """
        脚本入口函数
        :return: bool
        """
        result = copy(self.result)

        result_table = PrettyTable(["Creation Date", "EndPoint", "Location", "Name"])

        ak = args.access_key
        sk = args.secret_key

        al = AliCloud(ak,sk)
        buckets = al.listbuckets()

        if buckets is not None:
            for bucket in oss2.BucketIterator(buckets):
                    result_table.add_row([time.strftime("%Y-%m-%d %H:%M:%S", time.localtime(bucket.creation_date)), bucket.extranet_endpoint,
                                          bucket.location, bucket.name])

        output.success(f"result:\n"
                       f"{result_table}")
        return result
