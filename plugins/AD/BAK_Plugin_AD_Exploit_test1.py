import argparse
from copy import copy

from plugins.AD import PluginAdExploitBase
from utils import output
from utils.consts import AllPluginTypes


class PluginADTest1(PluginAdExploitBase):
    display = "AD 测试1"
    alias = "test"
    p_type = AllPluginTypes.Exploit

    def __init__(self):
        super().__init__()

    def reg_argument(self, parser: argparse.ArgumentParser):
        parser.description = self.display
        parser.add_argument("--test1", help="select all plugins", dest="test1")
        parser.add_argument("--test2", help="select one or more plugin (E.G. plugin name1, plugin name 2...)",
                            dest="test2")

    def run_script(self, args) -> dict:
        """
        脚本入口函数
        :return: bool
        """
        result = copy(self.result)
        output.debug(f"test:test1 = {args.test1}")
        output.debug(f"test:test2 = {args.test2}")

        result["status"] = 1
        result["data"]["instance_list"] = [
            {
                "test1": args.test1,
                "test2": args.test2
            }
        ]

        return result
