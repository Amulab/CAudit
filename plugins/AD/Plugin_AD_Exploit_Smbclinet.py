import argparse
from copy import copy

from plugins.AD import PluginAdExploitBase
from utils import output
from utils.consts import AllPluginTypes
from impacket.examples import logger
from impacket.examples.utils import parse_target
from impacket.examples.smbclient import MiniImpacketShell
from impacket import version
from impacket.smbconnection import SMBConnection

class PluginADSmbclient(PluginAdExploitBase):
    display = "smbclient"
    alias = "smbclient"
    p_type = AllPluginTypes.Exploit

    def __init__(self):
        super().__init__()

    def reg_argument(self, parser: argparse.ArgumentParser):
        parser.add_argument("-d", "--domain", help="dc fqdn (dc01.test.lab)", required=True, dest="domain")
        parser.add_argument("-u", "--username", help="username", required=False, dest="username")
        parser.add_argument("-p", "--password", help="password", required=False, dest="password")
        parser.add_argument("--dc-ip", help="domain ip address", required=False, dest="dc_ip")
        parser.add_argument("--hash", help='NTLM hashes, format is LMHASH:NTHASH', required=False,
                            metavar="LMHASH:NTHASH", dest="hash")

    def run_script(self, args) -> dict:
        """
        脚本入口函数
        :return: bool
        """
        result = copy(self.result)
        _domain_fqdn: str = args.domain
        _domain_name = ".".join(_domain_fqdn.split(".")[-2:])
        _dc_ip = args.dc_ip
        _username = args.username
        _password = args.password
        _hash=args.hash
        domain, username, password, address = _domain_fqdn, _username, _password, _dc_ip
        k=False
        aesKey=None
        file=None
        if _hash is not None:
            lmhash, nthash = _hash.split(':')
        else:
            lmhash = ''
            nthash = ''

        try:
            smbClient = SMBConnection(address, _dc_ip, sess_port=445)
            if k is True:
                smbClient.kerberosLogin(username, password, domain, lmhash, nthash, aesKey, _dc_ip)
            else:
                smbClient.login(username, password, domain, lmhash, nthash)

            shell = MiniImpacketShell(smbClient)

            if file is not None:
                output.info("Executing commands from %s" % file.name)
                for line in file.readlines():
                    if line[0] != '#':
                        print("# %s" % line, end=' ')
                        shell.onecmd(line)
                    else:
                        print(line, end=' ')
            else:
                shell.cmdloop()
        except Exception as e:
            if output.getLogger().level == output.DEBUG:
                import traceback
                traceback.print_exc()
            output.error(str(e))


