import argparse
from copy import copy

from prettytable import PrettyTable

from plugins.TCloud import PluginTencentCloudBase, TencentAPi
from utils import output
from utils.consts import AllPluginTypes


class PluginTCloudGetCosObjects(PluginTencentCloudBase):
    display = "列出存储桶内对象"
    alias = "t_get_cos_obj"
    p_type = AllPluginTypes.Exploit

    def __init__(self):
        super().__init__()

    def reg_argument(self, parser: argparse.ArgumentParser):
        parser.description = self.display
        parser.add_argument("-a", "--secret-id", required=True, help="secret id", dest="access_key")
        parser.add_argument("-s", "--secret-key", required=True, help="secret key", dest="secret_key")
        parser.add_argument("-n", "--backet-name", required=True, help="bucket name", dest="bucket_name")
        parser.add_argument("-r", "--region", required=True, help="bucket region", dest="region")

    def run_script(self, args) -> dict:
        """
        脚本入口函数
        :return: bool
        """
        result = copy(self.result)

        tapi = TencentAPi(args.access_key, args.secret_key)
        obj_results = tapi.list_oss_objects(args.region, args.bucket_name)

        table = PrettyTable(["Key", "LastModified", "Size", "AccessUrl"])
        table.align["AccessUrl"] = "l"

        for r in obj_results:
            table.add_row(r)
        output.success(f"result:\n"
                       f"{table}")

        return result
