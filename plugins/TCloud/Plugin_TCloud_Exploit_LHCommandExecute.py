import argparse
import base64
from copy import copy

from prettytable import PrettyTable

from plugins.TCloud import PluginTencentCloudBase, TencentAPi
from utils import output
from utils.consts import AllPluginTypes


class PluginTCloudCommandExecute(PluginTencentCloudBase):
    display = "轻量应用服务器命令执行"
    alias = "t_lh_exec"
    p_type = AllPluginTypes.Exploit

    def __init__(self):
        super().__init__()

    def reg_argument(self, parser: argparse.ArgumentParser):
        parser.description = self.display
        parser.add_argument("-a", "--secret-id", required=True, help="secret id", dest="access_key")
        parser.add_argument("-s", "--secret-key", required=True, help="secret key", dest="secret_key")
        parser.add_argument("-r", "--region-id", required=True, help="region-id", dest="region_id")
        parser.add_argument("-i", "--instance-id", required=True, help="instance id", dest="instance_id")
        parser.add_argument("-t", "--os-type", required=False, help="os type(default linux)",
                            choices=["windows", "linux"], default="linux", dest="os_type")
        parser.add_argument("-c", "--command", required=True, help="command", dest="command")

    def run_script(self, args) -> dict:
        """
        脚本入口函数
        :return: bool
        """
        result = copy(self.result)

        tapi = TencentAPi(args.access_key, args.secret_key)
        result_b64 = tapi.lh_execute_command(args.region_id, args.instance_id, args.os_type,args.command)

        if result_b64:
            output.success(base64.b64decode(result_b64).decode())

        return result
