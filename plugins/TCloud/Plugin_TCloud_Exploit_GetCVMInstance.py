import argparse
import random
from copy import copy

import requests
from prettytable import PrettyTable

from plugins.TCloud import PluginTencentCloudBase, TencentAPi
from utils import output
from utils.consts import AllPluginTypes


class PluginTCloudGetCVMInstance(PluginTencentCloudBase):
    display = "列出CVM实例"
    alias = "t_get_cvm"
    p_type = AllPluginTypes.Exploit

    def __init__(self):
        super().__init__()

    def reg_argument(self, parser: argparse.ArgumentParser):
        parser.description = self.display
        parser.add_argument("-a", "--secret-id", required=True, help="secret id", dest="access_key")
        parser.add_argument("-s", "--secret-key", required=True, help="secret key", dest="secret_key")

    def run_script(self, args) -> dict:
        """
        脚本入口函数
        :return: bool
        """
        result = copy(self.result)

        tapi = TencentAPi(args.access_key, args.secret_key)
        region_lists = tapi.get_all_regions()

        cvm_lists = tapi.get_cvm_instance(region_lists)

        table = PrettyTable(["InstanceID", "InstanceName", "InstanceType", "OsName", "PrivateIpAddress", "PublicIpAddress"])
        # table.border = False
        #
        for c in cvm_lists:
            table.add_row([c.InstanceID, c.InstanceName, c.InstanceType, c.OsName, c.PrivateIpAddresses, c.PublicIpAddresses])
        output.success(f"result:\n"
                       f"{table}")

        return result
